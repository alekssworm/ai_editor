from PySide6.QtCore import QPointF
from PySide6.QtGui import QImage, QPainter, Qt, QPixmap, QPainterPath
from PySide6.QtWidgets import QGraphicsItem, QGraphicsPixmapItem
from PySide6.QtGui import QPainterPath



def save_outputs(self):
    rect = self.scene.sceneRect()
    size = rect.size().toSize()

    # –ù–∞–π—Ç–∏ —Ñ–æ–Ω
    background = None
    for item in self.scene.items():
        if isinstance(item, QGraphicsPixmapItem):
            background = item
            break

    if not background:
        print("‚ùå –§–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –ù–∞–π—Ç–∏ –ø–µ—Ä–≤—É—é —Ñ–∏–≥—É—Ä—É (–æ–≥—Ä–∞–Ω–∏—á–∏–º –ø–æ–∫–∞ –æ–¥–Ω–∏–º)
    shape_item = None
    for item in self.scene.items():
        if isinstance(item, QGraphicsItem) and not isinstance(item, QGraphicsPixmapItem):
            shape_item = item
            break

    if shape_item is None:
        print("‚ùå –§–∏–≥—É—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    shape_rect = shape_item.sceneBoundingRect().toRect()

    # 1Ô∏è‚É£ –°—Ü–µ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é (–≤–∫–ª—é—á–∞—è —Ñ–∏–≥—É—Ä—É)
    full_with_shape = QImage(size, QImage.Format_ARGB32)
    full_with_shape.fill(Qt.transparent)

    painter = QPainter(full_with_shape)
    self.scene.render(painter)
    painter.end()

    # 2Ô∏è‚É£ –í—ã—Ä–µ–∑–∞–µ–º —Ñ–∏–≥—É—Ä—É –∏–∑ —É–∂–µ –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    painter = QPainter(full_with_shape)

    # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º—É
    painter.setCompositionMode(QPainter.CompositionMode_Clear)

    from draw_tools import SelectableCircleItem  # –ò–º–ø–æ—Ä—Ç –¥–ª—è isinstance()

    if isinstance(shape_item, SelectableCircleItem):
        path = QPainterPath()
        path.addEllipse(shape_item.sceneBoundingRect())
        painter.setClipPath(path)
        painter.fillPath(path, Qt.transparent)
    else:
        painter.fillRect(shape_item.sceneBoundingRect(), Qt.transparent)

    painter.end()

    full_with_shape.save("image_without_shape_area.png")



    # 3Ô∏è‚É£ –í—ã—Ä–µ–∑–∞–µ–º —Ç–æ–ª—å–∫–æ —Ñ–æ—Ä–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫—Ä—É–≥)
    cut_size = shape_rect.size()
    cut_image = QImage(cut_size, QImage.Format_ARGB32)
    cut_image.fill(Qt.transparent)

    painter = QPainter(cut_image)

    # –°–¥–≤–∏–≥–∞–µ–º —Ñ–æ–Ω —Ç–∞–∫, —á—Ç–æ–±—ã –Ω—É–∂–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –ø–æ–ø–∞–ª–∞ –≤ (0, 0)
    source_rect = shape_rect
    target_point = QPointF(-source_rect.x(), -source_rect.y())
    original_image = background.pixmap().toImage()
    painter.drawImage(target_point, original_image)

    if isinstance(shape_item, SelectableCircleItem):
        path = QPainterPath()
        path.addRect(0, 0, cut_size.width(), cut_size.height())  # –≤—Å—ë –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        circle = QPainterPath()
        circle.addEllipse(0, 0, cut_size.width(), cut_size.height())
        path = path.subtracted(circle)  # –≤—ã—á–∏—Ç–∞–µ–º –∫—Ä—É–≥ ‚Äî –ø–æ–ª—É—á–∞–µ–º –≤—Å—ë –ö–†–û–ú–ï –Ω–µ–≥–æ

        painter.setCompositionMode(QPainter.CompositionMode_Clear)
        painter.fillPath(path, Qt.transparent)

    painter.end()
    cut_image.save("shape_only_area.png")

    print("‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ:")
    print("üü¢ image_without_shape_area.png (—Ñ–æ–Ω + —Ñ–∏–≥—É—Ä—ã —Å –≤—ã—Ä–µ–∑–æ–º)")
    print("üü¢ shape_only_area.png (—Ç–æ–ª—å–∫–æ –æ–±–ª–∞—Å—Ç—å –ø–æ–¥ —Ñ–∏–≥—É—Ä–æ–π)")
